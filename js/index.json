[
{"page":"part-1.html","sections":[{"title":"1.1 Overview & Goals","id":"#overview_goals","lines":["1.1","Overview & Goals","At the end of this part, you will be able to:","Know the basics of HTML and how it works within the client-server model.","Set up the tools you will use for the rest of the course.","Edit your first web page with Dreamweaver.","Publish this web page with GitHub.","Contents of this part","This first chapter brings you theoretical knowledge into how the web works.","In “What is a web page?”, you will learn how the client-server model works on the web, what the difference between “web” and “internet” is, and what a programming language is.","The section on Cybersecurity & Privacy gives you tips to stay safe online and explains what cookies are.","Next, you learn how to set up the software tools you need and retrieve the template for your resumé.","This might be the first HTML file you are working on. Section 1.5 explains how the HTML language is structured.","Once you are more familiar with the language, the final section is where you edit your resumé and publish it.","Do the work, step by step","This is a very brief overview of the tasks you will have to do to complete the first workshop. Items 1 to 4 of the list below are explained in detail in section 1.4 and items 5 to 7 in section 1.6.","Install the tools: GitHub Desktop and Dreamweaver.","Create a GitHub account","Clone the résumé template into a repository your GitHub account.","Synchronize this repository with your laptop.","Edit the code to write your own name with Dreamweaver.","Publish it onto GitHub pages.","Visit your very own page, anywhere and on any device!","↑ Back to the top of Part 1","↑ Back to the top of “Overview & Goals”"]},{"title":"1.2 What is a web page?","id":"#what_is_a_webpage","lines":["1.2","What is a web page?","Watch on Microsoft Stream","A web page is a document written in the HTML programming language.","When you load a web page, your computer (client) will ask for this web page.","Your browser will read the HTML code and turn it into a beautiful-looking page.","The web is not the internet","The word “internet” is used to describe the whole infrastructure connecting computers and other devices around the world. It is the direct descendant of academic and military networks developed in the United States in the 1960s and 1970s.","Multiple services run on the internet, including email (which has existed since 1971). The web (short for “World Wide Web” or WWW) is another of these services.","The World Wide Web has been created in 1990 by Tim-Berners Lee and his colleagues to share information within the European Organization for Nuclear Research (CERN) in Geneva.","The web is based on a series of technologies: The Hyper-Text Transfer Protocol (HTTP) to retrieve pages from web server, the Hyper-Text Markup Language (HTML) for describing pages (see below), etc.","Servers and Clients","A server is a computer connected to the internet that will provide information upon request.","For example, a Domain Name Server will provide the translation between host names (e.g. www.buas.nl) and IP addresses (e.g. 83.96.243.158)","A web server will be providing the content (HTML pages, images, videos, etc.) that you see when visiting a web page","A computer asking information to a server is called a client","Web browsers","You can open web pages, including this one, with a category of app called a web browser.","The most commonly used browsers are Google Chrome and Apple Safari. You can check how common browsers are on Statcounter GlobalStats.","Since 55% of web visits in the Netherlands come from mobile phones, you must make sure that your website works on very small screen sizes.","Programming languages","A programming language can be defined as a formal language comprising a set of instructions that produce various kinds of output.","For example, in HTML (HyperText Markup Language), the code that you will write produces the visual aspect of a web page.","Other languages used commonly on the web include:","CSS (Cascading Style Sheets), which is used to bring styling to your page: Use it to fine-tune the layout, colours and fonts of your pages.","JavaScript (also known as JS), which is used to bring bring interactive features to your pages.","HTML, CSS and JS are languages that your web browser reads (or “inteprets”) to display web pages. You can always see the source code for a web page by using the Developer Tools (Press F12 on Windows or Command+Option+I on a Mac).","There are other programming languages that run on servers and whose role is to show HTML pages that will be different each time you visit them – this is the case of social media feeds and news websites. An example of a popular server-side language is PHP (which stands for Personal Home Page)","Based on other definitions, you might read elsewhere that HTML isn’t a programming language, since it lacks some features (e.g. writing algorithms).","What happens when you ask for a web page?","Computer user","Hi, Browser! Can I have a look at the page at www.buas.nl?","Browser","Sure, just wait a second, I need to make a few server requests!","Browser","Hi, DNS server! Can you tell me where www.buas.nl is?","DNS Server","Yes, the IP is 83.96.243.158","Browser","OK, now I’ll get in touch with that web server.","Browser","Hi, Web server! Can you give me the home page for www.buas.nl","Web server","Here’s some HTML code","<!doctype html><html lang=\"en\"><head><meta charset=\"utf-8\"><title>Breda University of Applied Sciences</title></head><body>…","Browser","Thanks, Web server! Based on the code you sent me, I will also need some stylesheets and some images so I can make it look nice","Web server","Here you are!","…","Browser","I’ve got everything now, I can render the page for the user!","Browser","Hello again, computer user, here is the page you asked for:","Computer user","Thanks, this looks great! Now I will click on “Our programmes”","Browser","OK, I’ll fetch the page at www.buas.nl/en/programmes","↑ Back to the top of Part 1","↑ Back to the top of “What is a web page?”"]},{"title":"1.3 Cybersecurity & Privacy","id":"#cybersecurity","lines":["1.3","Cybersecurity & Privacy","Summary","Always use secure, encrypted connections.","A password manager is the best way to ensure you are using safe passwords.","Be mindful of the traces you leave online.","Tip #1: Use secure connections","A secure connection is a connection between services, computers and/or people where the contents can only be accessed by the legitimate participants in the connection. This is generally achieved through the use of encryption, where only the receiver of messages has a “private key” and can decrypt or decode the content of the messages.","This is an example of a coded message using the ‘Caesar Cipher’: V ybir UGZY naq gur Jbeyq Jvqr Jro. Pbqvat vf sha.","Decode the message","When visiting a website, make sure that there is a lock sign in the address bar. This means you are using the secure version of HTTP (HTTPS). If you are using the unsecure version, never enter a password or a credit card number.","WiFi connections that do not have a lock sign and/or do not require a password are not secure, therefore computers located on the same WiFi access point can read what goes into and comes out of your computer. This means you should avoid the Guest network at University.","Use message apps that provide end-to-end encryption, such as WhatsApp or Signal. The main difference is that the first one belongs to a big for-profit company, and the second one is supported by donations.","Tip #2: Use a password manager","Passwords are very hard to use properly. You should:","Use passwords that are hard to guess or to crack. Hard to guess meanst hey should not include any personal details or be words that can be found in a dictionary. Hard to crack means that they should be long, so testing all combinations is too long for a computer to do in a reasonable time.","Never reuse the same password twice: If a password is breached from a website or app, then the attackers will try to use it on other popular platforms.","…and of course, you should try to remember these passwords, which is very complicated given the criteria above, and the very peculiar requirements that some services have (e.g. there should be at least one capital letter and 2 special characters from a specific list).","This is why it is extremely hard to manage your passwords well unless you use a password manager. Web browsers will manage your passwords, as well as Keychain on MacOS, but we recommend that you use a dedicated app, such as KeePass, Lastpass, 1Password or Dashlane","Bonus tip: Some services provide the option for Multiple-Factor Authentication (MFA) which add a layer of security since you’re not relying only on passwords. MFA generally uses one-time authorization codes which can be sent by SMS, generated in dedicated apps (this includes some password managers) or printed on paper and stored in a safe place.","Tip #3: Back up your files","Don’t risk losing your files. Back them up in more than one place","Cloud services can synchronize your files automatically and without any effort. Cloud providers generally use more than one location to store your data for additional safety. With your University email address, you get 1TB for free on Microsoft’s OneDrive. Competitors include Apple’s iCloud, Dropbox and Google Drive.","External hard drives have some additional advantages in terms of longevity and safety: They’re a one-time investment where you do not need to renew your subscription. Also, if you unplug them and store them in a drawer, they cannot be remotely hacked.","Tip #4: Think of what you reveal about yourself","Your online presence is an integral part of who you are. Whether you do it to apply for a job, keep your loved ones updated, or to meet new people, you will need at some point to publish personal details about yourself.","Be aware though, that some of these details can be used for malicious purposes. Think of the following examples:","The background in a photo can be used to find out where it was taken.","An EU Covid Green Pass, a boarding pass or a train ticket in the QR code format may contain your name and date of birth.","Birthdates are commonly used as PIN codes, so someone who knows your birthday may try to unlock your phone.","Some of your details might be available for sale due to data breaches. This happened to my bank account number after I bought event tickets from a website that was attacked.","Someone who knows enough details about you might try to call your bank or your phone provider and pretend to be you so they can reset your password and gain access to your accounts.","What are cookies?","Cookies are small pieces of data that your browser receives when visiting web servers. There role is to keep information about you when you return to the same website. Without cookies, you would have to log in again every single time you visit the same website again, and you would loose your shopping cart just by closing a tab or visiting another website.","But this useful technology is also abused for tracking purposes, thanks to what is called “third-party cookies”. Everytime you visit a web page that contains third-party content, which can be advertisements, analytic tools such as Google Analytics, or a like button from social media, then this content can also send your browser a cookie. This allows companies such as Google and Facebook to track your activity across multiple websites that you visit, and collect way more information about you than you might know.","You can also make delicious cookies by mixing 125g of butter, 180g of plain flour and 55g of sugar, and cooking for 15 minutes at 180°C.","Resources about Security and Privacy","The following organizations provide information about these topics, as well as resources and tools to help you stay safe:","The Electronic Frontier Foundation (EFF) is an international civil liberties organization. They provide the Privacy Badger extension which you can install on your browser to reduce your exposure to tracking technology.","Bits of Freedom is a similar organization operating within the Netherlands. In particular, they provide the Fix je Privacy toolkit.","Looking for an equivalent in another country? They might be members of the European Digital Rights network.","↑ Back to the top of Part 1","↑ Back to the top of “Cybersecurity & Privacy”"]},{"title":"1.4 Set up the tools","id":"#setting_up_tools","lines":["1.4","Set up the tools","Watch on Microsoft Stream","Install a web editor such as Dreamweaver.","GitHub is a version control system. Create an account and download the desktop app.","Copy the template repository, then use GitHub Desktop and Dreamweaver to open it on your desktop.","Editing text","Whether it’s HTML, CSS, JavaScript or other programming languages, creating code generally starts with typing the code using a text editor.","A basic text editor, like Notepad on Windows or TextEdit on MacOS, will only show you the source code, with no hint.","Advanced text editors, such as Sublime Text will help you visualize the structure of the code, by showing different parts of your text in different colours.","<p>Hello, world!</p>","<img src=\"logo-buas.svg\" alt=\"Our logo\">","What your code looks like in a basic text editor (e.g. Notepad)","<p>Hello, world!</p>","<img src=\"logo-buas.svg\" alt=\"Our logo\">","What your code looks like in an advanced text editor (e.g. SublimeText or Dreamweaver)","An Integrated Development Environment (IDE) such as Adobe Dreamweaver, will go several steps further and offer the following helpful features:","Showing the result of your code in real time.","Showing errors in your code.","Offering suggestions and autocompletion when you type code","All the examples in the tutorials use Dreamweaver, which is part of the Adobe Creative Cloud suite. You can buy a discounted Adobe CC license from SurfSpot for 133€/year. A free alternative is Microsoft’s Visual Studio Code.","What is version control?","In this course, you will use a version control system named GitHub. The role of version control is to keep track of all changes in your files. In practice, these are the benefits of using version control:","You can go back and forth in time within a file’s history and see what was changed at each point.","You can easily undo changes if you are unhappy with them, even after days or months: You no longer need to keep several copies (e.g. work_final.html, work_final_v2.html) since this is all managed by GitHub.","You can synchronize and backup your work with the cloud or with another computer.","You can collaborate with your peers and see what changes they’ve made.","Does this sound familiar? Office 365 and Google Docs offer all these features. The main difference with Git is that, while Office and Docs will synchronize your changes automatically as a background task.","Version 1 by Alice","1","<h1>Heading</h1>","2","<h2>Sub-heading</h2>","−","3","<p>First paragraph</p>","Version 2 by Bob","1","<h1>Heading</h1>","2","<p>First paragraph</p>","3","<p>Second paragraph</p>","+","An example showing two versions and changes between versions, line per line.","What is GitHub?","GitHub, founded in 2008 and bought by Microsoft in 2018, is a platform built around version control. It is:","A place where you can host your code and synchronize it with your laptop.","A place where you can host your website and let the rest of the world visit it (with GitHub pages).","The biggest library of computer code, with both publicly available (open source) code and private organization hosting projects on the platform.","A social and professional platform, with 40 million users, many of which use it to showcase their coding skills.","A toolkit, including a Desktop app that you will install on your laptop, and tutorials where you can learn about all features of GitHub.","Definitions","A Repository is a folder that is being synchronized on GitHub. Generally, a repository will correspond to a project, for example a website. Each repository can be accessed by typing github.com followed by the name of a user or organization (e.g. buas-media-interactive) and then the name of the repository (e.g. prj4-cv). The URL for the prj4-cv repository is therefore https://github.com/buas-media-interactive/prj4-cv","GitHub Desktop is an app that you will install on your Desktop. You will use it to synchronize your work between your laptop and the GitHub platform. It lets you track your changes even when you work entirely offline.","Getting started","Time to practice! Just follow these steps:","Go to github.com and create an account","Download and install the GitHub Desktop app from desktop.github.com","Install Adobe Dreamweaver or an equivalent tool (see above).","Go to the PRJ4 CV repository and click on “Use this template”.","This will generate a repository within your own account — this repository is a copy of the one used.","Open GitHub Desktop on your computer. Find the “clone repository” option and clone your repository. This will create a new folder on your laptop. Take note of where it is.","Open the folder with Explorer (on Windows) or Finder (on MacOS). Have a look at the folder structure.","Open index.html with Dreamweaver.","In the next section, we explain how the structure of this HTML document works. In the final section, you will be editing the file and publishing it.","WARNING:","The biggest difficulty is making sure that you're always working on the right files. You only need to keep one copy of the files on your laptop at a given time, and you need to make sure that Dreamweaver is pointing at these files.","What you should get…","The prj4-cv repository as seen in the Windows File Explorer","The index.html file as seen in Dreamweaver","↑ Back to the top of Part 1","↑ Back to the top of “Set up the tools”"]},{"title":"1.5 The basic structure of HTML","id":"#basic_html","lines":["1.5","The basic structure of HTML","Watch on Microsoft Stream","HTML uses a specific syntax to define the structure of elements in a page.","An element can contain other elements, called children. This forms a family tree, also known as DOM Tree.","Elements can have attributes, including “ID” and “class”.","A simple HTML element","This example shows a simple paragraph element, made of three parts:","An opening (or start) tag, <p>","The content of the element, Hello, world!","A closing (or end) tag, </p>","The name of the element, P stands for “paragraph”","Code:","<p>Hello, world!</p>","Result:","Hello, world!","Structure:","<p>","(element)","Hello, world!","(text content)","Nested elements","In this second example, we create a new element inside the paragraph (p element).","This element, strong, makes its content bold.","The strong element is a child of the p element.","Code:","<p>Hello, <strong>","world</strong>!</p>","Result:","Hello, world!","Structure:","<p>","(element)","Hello,","(text)","<strong>","(element)","!","(text)","world","(text)","Self-closing elements","Some elements do not contain any text and therefore do not require any closing tags.","This is the case for br (the line break element) and for img (the image element).","Sometimes, you will see these elements written with an additional slash: <br />","Code:","<p>Hello, <br>","world!</p>","Result:","Hello, world!","Structure:","<p>","(element)","Hello,","(text)","<br>","(element)","world!","(text)","Attributes","In addition to the tag name (e.g. p), an opening tag can also contain attributes.","Each attribute starts with an attribute name, followed by the equal sign (=) and then, the value for the attribute.","In the first example, the name of the attribute is id and the value is “my-id”","This example shows three common attributes:","id identifies a unique element within a page. You cannot use the same value for an id more than once in the same page. ID has an additional benefit: If you add #my-id to the URL of this page (You can click here to try), it will scroll here directly. This is also how all internal links within the current page were made.","class is a way of identifying elements that share common characteristics. This will be very useful in Part 3, where we learn about.","style allows you to change the aspect of an element. This will also be covered extensively in Part 3.","Code:","<p id=\"my-id\" class=\"my-class\" style=\"background:purple; color: yellow;\">Hello, world!</p>","Result:","Hello, world!","Structure:","<p>","(element)","id","(attribute)","my-id","(value)","class","(attribute)","my-class","(value)","style","(attribute)","background…","(value)","world!","(text)","Required elements","A simple paragraph like the one we’ve been showing so far is not sufficient to be considered a full, valid HTML page. The following elements are also required.","A <!doctype> declaration (which is not considered an HTML element).","An <html> element which contains everything and is also called the root element.","A <head> element which contains metadata that will not be directly displayed in the browser frame. This in turn includes, among others:","A <meta> tag which gives information about the characters used. If you ever see accented characters replaced by other characters (e.g. Ã¼berhaupt instead of überhaupt), the issue is probably located here.","A <title> element which contains the title of the page, as shown at the top of the browser window (PRJ4 | Part 1: Publishing your first page in this case), and in search engine results.","Immediately below the <head> comes a <body> element, which contains everything visible in the frame. There should be no other elements within <html>","Code:","<!doctype html>","<html>","<head>","<meta charset=\"utf-8\">","<title>Page title</title>","</head>","<body>","<p>","Hello,","<strong>world!</strong>","</p>","</body>","</html>","Structure:","<html>","<body>","<p>","<strong>","<head>","<meta>","<title>","↑ Back to the top of Part 1","↑ Back to the top of “The basic structure of HTML”"]},{"title":"1.6 Edit & Publish","id":"#editing_publishing","lines":["1.6","Edit & Publish","Watch on Microsoft Stream","We’re at the end of part 1!","You now need to use Dreamweaver to edit your resumé","And then you publish it with GitHub","Synchronizing GitHub","As discussed in section 1.4, GitHub will let you track your changes and publish them. One important point to notice is that you are in control of the following:","Which changes you want to track (this is called committing in GitHub).","When, and in which direction you want to synchronize them (this is called pushing when going from your laptop to the cloud and pulling when going the other way round).","Therefore, commit, pull and push are three different actions within the GitHub Desktop app that you need to do in sequence.","What you do in GitHub Desktop is also independent from when you decide to save files in your text editor, so saving files is an additional essential step.","Whenever you want to keep track of changes you have just made, you need to first save the file in Dreamweaver and then commit the file in GitHub Desktop. This only tracks changes on your laptop without synchronizing them and you can do this entirely offline.","When you want to put a new version of your work on GitHub, whether the goal is to publish it or to allow your team mates to collaborate, you need to click on push in GitHub Desktop.","When someone (someone else, or yourself, but on another device) has made changes to the repository, and you want to retrieve these to your laptop, click on pull","Publishing on GitHub Pages","Publishing a website means making it visible to the rest of the world. Compare what you see at github.com/buas-media-interactive/prj4-cv with what you see at buas-media-interactive.github.io/prj4-cv. The first one shows you the source code and the other one the website.","You will notice that the URL for your published web page doesn’t include the name of the HTML file (index.html). This is a naming convention: when you ask for a page without specifying URL, GitHub Pages will understand that you are looking for index.html","If you use any other name, e.g. cv.html, you will be able to access it by adding this file name to the repository URL, i.e. by typing https://buas-media-interactive.github.io/prj4-cv/cv.html, but you won’t see anything at https://buas-media-interactive.github.io/prj4-cv/","Instructions","To follow the steps below, you must have completed the instructions in part 1.4 first.","In Adobe Dreamweaver (or another HTML editor), change all references to “Firstname Lastname” by your own name","Before going any further, save your files!","In GitHub Desktop, commit your files by clicking on the “Commmit to main” button. You must provide a short description of your changes.","At this point, your changes are still only on your laptop. You now need to push your changes by clicking on the “Push” button.","Clicking on “View on GitHub” opens a browser window and lets you see what is online. Check that all your changes have been uploaded to the cloud.","Now your resumé should be ready to publish. Go to the repository’s Settings, then to the Pages subsection. Choose the main branch as the source, then click on Save.","You should now see a green check mark (see below) and the URL for your website. Wait about 1 minute for the website to be fully published, then click on the link and visit your first published website!","Your site is published at https://buas-media-interactive.github.io/prj4-cv/","What is next?","In the next three parts, you will build up on the skills you’ve just learned.","The next part will be all about editing the content of the page: You will learn the HTML language in more depth and you will learn how to manage your images for the web.","In part 3, you will change the aspect of your resumé by applying styles. You will learn an additional language named CSS.","The final part helps you go one step further for your group website and will give you tips on how to use Bootstrap.","↑ Back to the top of Part 1","↑ Back to the top of “Edit & Publish”"]}],"meta":{"date":"2022-02-21T20:32:43.348Z","browser":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0"}}
,
{"page":"part-2.html","sections":[{"title":"2.1 Overview & Goals","id":"#overview_goals","lines":["2.1","Overview & Goals","At the end of this part, you will be able to:","Modify, add and remove content to an HTML page.","Check the validity of your HTML code and fix it if needed.","Edit, modify and organize images to optimize them for a website.","Contents of this part","This second chapter supports you as you edit your resumé.","You’ll first learn about common HTML elements so you understand the function of each of these building blocks and can add, remove or change parts of your résumé.","Your browser’s developer tools can help you fix errors or draw inspiration from other websites.","We are all humans, and typos happen when writing HTML code. Learn how to recognize, find and fix them by keeping your HTML code clean and a good folder structure.","You then learn how to use hyperlinks to direct your visitors to other pages or sites and to show them images.","Your images will be hosted in your repository alongside your HTML code. The final section teaches you the best practices for resizing and delivering images.","What you need to do","This part of the guide will support you in editing all the content in your resumé and change the images. This includes:","Editing all text content in the page: tagline, schools, job names, etc.","Adding or removing sections, e.g. additional jobs, languages or hobbies","Adding a photo of yourself and the logos of schools and employers.","In doing so, you must follow good coding practices. This includes:","Checking that the structure of your HTML code is still valid after major changes.","Putting your images in the appropriate folders and delivering them alongside your website on GitHub.","Managing your images to ensure a compromise between image quality and page load speed.","Republishing your website and checking that it is working correctly on mobiles.","↑ Back to the top of Part 2","↑ Back to the top of “Overview & Goals”"]},{"title":"2.2 Common HTML elements","id":"#html_tags","lines":["2.2","Common HTML elements","Watch on Microsoft Stream","You don’t need to remember the whole list of HTML elements, but you need to pick the right ones when coding.","Some elements are essential for the structure of the code: <html> <body>, <head>, etc..","Elements can be generic or semantic, and they can be inline or block.","There are 100+ elements, not all are listed here, so check online references.","Previously in this course…","In part 1.5, you’ve already encountered quite a few elements:","<html>, the root element containing everything else.","<head>, which contains metadata about the whole document.","<meta> and <title> which are only found in the head.","<body>, for all the content within the browser frame.","<p>, the paragraph element.","<strong>, which turns its contents bold.","<br>, the line break tag.","You already know that some elements need an opening and a closing tag, for example a paragraph starts with <p> and ends with </p>.","Other elements are self-closing and cannot contain anything. Within the list above, only <meta> and <br> are self-closing, they do not need an end tag.","How many tags are there?","Given the complex history of the HTML standard, you won’t find a universally accepted number, but there are over 100 (yes, one hundred) elements you can use in a web page.","You never need to remember all of them by heart, but you need to be able to identify which element is the most appropriate for your needs.","Sources you can use include:","The Mozilla Developer Network","W3Schools","“Block” elements","This is a first list of very common HTML elements (the underlined parts explain what the tag name stands for):","Heading levels 1 to 6: <h1>, <h2>, <h3>, <h4>, <h5> and <h6>","Lists, which exist in two flavours:","unordered lists, a.k.a. bullet points, with the <ul> element","ordered (or numbered) ones, with <ol>","Within either <ul> or <ol>, each list item uses the <li> tag.","<hr> is an horizontal rule. It is self-closing","The most used HTML element on the web is <div>, which is used to create logical divisions within content. <div> is often used in combination with CSS styles (which you’ll learn about in the next part) to group elements visually. This page alone has 114 such div elements.","All these tags, as well as <p> and <br>, have in common that opening them creates a new “block”. This means that you break the flow of the text and move to a new line. This behaviour will become clearer when you compare these with inline tags.","Code:","<h3>Heading 3</h3>","<h4>Heading 4</h4>","<p>This is a paragraph</p>","<div>","<p>Another paragraph inside a div</p>","</div>","<hr>","<ul>","<li>Item in an unordered list</li>","</ul>","<ol>","<li>Item in an ordered list</li>","</ol>","Result:","Heading 3","Heading 4","This is a paragraph","Another paragraph inside a div","Item in an unordered list","Item in an ordered list","“Inline” elements","Here is a second list of elements:","<em>, standing for emphasis and <i>, which both turn your text in italics.","<b>, like <strong>, makes your text bold.","<u> for underline.","<a>, meaning anchor, which is used in hyperlinks with the href (hypertext reference) attribute.","<img>, the image tag, which needs a src (source) attribute to link it to an image file, and an alt attribute to provide a textual alternative. <img> is self-closing.","<span> is also a common, generic way of identifying a span of text","The biggest difference with the first list of tags is that inline ones do not interrupt the flow of text but rather make it continue on the same line.","Code:","<p>","This paragraph contains","<strong>words in bold type</strong>,","<em>words in italics</em> and","<u>also underlined ones</u>.","</p>","<p>","This paragraph contains","<span>a span</span>,","<a href=\"part-1.html\">a hyperlink sending you to part 1</a> and the","<img src=\"images/common/logo-buas.svg\" alt=\"Our logo\" width=\"43\" height=\"14\">","BUas logo.","</p>","Result:","This paragraph contains words in bold type, words in italics and also underlined ones.","This paragraph contains a span, a hyperlink sending you to part 1 and the  BUas logo.","“Semantic” elements","With over 100 elements, you’ve already noticed that some of them are very similar and what they do. For example:","<b> and <strong> look the same","<i> and <em> also have an identical effect","Alongside <div>, there are several tags that can be used to create a division in the page, e.g. <header>, <main>, <article>, etc.","The difference between these similar tags is called semantics. In other words, each of these tags ascribes a meaning, or a function, to its content.","The rationale behind semantics is that the structure of your HTML page should reflect the structure of your content independently of how your page looks in the browser. This is important for:","Accessibility purposes: Some people rely on screen reading software to be able to access the web. This software will in turn rely on the structure of the page to identify key elements and say out loud what they are.","Search Engine Optimization (SEO): Every search engine ascribes a ranking to determine how relevant a page is with regards to search keywords. This ranking is partly based on whether a keyword appears in relevant parts (e.g. headings). Search engines also rely on the page structure to identify important information like business addresses and opening hours.","Collaboration: Well-structured code that clearly signposts what each part of the page means will be easier for other web developers to read and to work on.","Some tags are considered to be generic, which means that they have no specific structural meaning and are generally used purely for layout and styling purposes. This is the case for <div> and <span>","Example semantic elements","The meaning of semantic tags is defined in the HTML standard:","<header> is used for the introduction to a piece of content.","<nav> defines a section used for navigation purposes such as a menu or table of contents.","<article> is a self-contained piece of content, such as a news article, a blog post, a product entry in an online shop, etc.","<section> is used for an important subdivision of your document such as a chapter.","<footer> is used at the end of a piece of content.","<aside> to introduce indirectly related content.","The structure of your page could for example look like this:","<header>","<nav>","<article>","<aside>","<section>","<footer>","Other elements","We’re still far from the 100+ elements we mentioned at the start. Some elements that you may use for the purpose of your assignment include:","Media elements, such as <audio> and <video> can be used to embed media.","Tables like the one above (with semantic elements) can be made using the following tags: <table>, <tr> (table row) and <td> (table data). Check the Mozilla Developer Network for a tutorial on tables.","Forms are found everywhere a website asks visitors for data: login screens, contact forms, shopping carts. Check W3Schools for a tutorial on forms.","Some of these elements are present in this page as well as in other templates for this course. Don’t hesitate to check the source code!","Miscellaneous Examples","Use <audio> to listen to HUB radio:","Use this form to send an email","Your email","Select an academy","Built Environment & Logistics (ABEL)","Games & Media (AGM)","Leisure & Events (ALE)","Hotel & Facility (AHF)","Tourism (AT)","What is your academy?","Subscribe to our newsletter","Your message","Send your message","↑ Back to the top of Part 2","↑ Back to the top of “Common HTML Elements”"]},{"title":"2.3 Use Developer Tools","id":"#dev_tools","lines":["2.3","Use Developer Tools","Watch on Microsoft Stream","Your browser has Developer Tools that can help you check the structure of any page.","Use it to test fixes on your code or to see how other.","You can also use it to identify some errors.","Where to find Developer Tools?","Check the official documentation for your browser. Keyboard shortcuts vary depending on the operating system.","Browser (link leads you to developer docs)","Keyboard shortcut (Windows)","Keyboard shortcut (Mac)","Google Chrome","F12 or Ctrl+Shift+I","Command+Option+I","Mozilla Firefox","Microsoft Edge","Apple Safari","Mac Only","Activated via Menu","Another way to access the Developer Tools is to choose an element within your page, then Right-Click on it and choose “Inspect” in the contextual menu that appears. Why not try it here?CONGRATULATIONS! You've found hidden content!","What is in Developer Tools?","The Developer Tools is divided in several tabs (which might be labeled differently depending on browsers):","Console is generally used to work with JavaScript, which is not covered in this course, but it sometimes shows useful error reports.","Elements (labeled Inspector in Firefox) is the most useful tab for our course. Possibilities include:","You can check the structure of the HTML Tree (the Document Object Model or DOM) and fold or unfold it.","You can copy the relevant piece of HTML code to reuse it.","You can edit the HTML code and see the results immediately. Be careful, it won’t be saved.","You can also check which styles are applied to an element (you’ll learn about styles in Part 3).","Sources show you all the elements that were loaded alongside the HTML code of the page. This includes all the images, fonts and stylesheets that are needed to achieve the page’s visual aspect.","Try it out!","Using the Elements tag in Developer Tools, try answering the following questions:","Which heading level is used just above (<h1>, <h2>… <h6>)?","Which class(es) does this heading have?","Which element does it have as a parent?","How deep/far is it in the whole document’s tree?","Using the Sources tab, check the following:","How many additional resources are loaded alongside this page?","Which of these are images?","Which of these are loaded from the same website (buas-media-interactive.github.io)?","From which other websites are resources loaded? These are called CDNs (Content Delivery Networks).","Hint!","This is what it looks like in the Chrome Developer tools:","↑ Back to the top of Part 2","↑ Back to the top of “Use Developer Tools”"]},{"title":"2.4 Avoid Errors","id":"#avoid_errors","lines":["2.4","Avoid Errors","Watch on Microsoft Stream","Name the files and folders in your project correctly.","Check what the most common HTML errors are.","Many errors result in having an improper HTML structure.","Use validation tools to identify these errors.","File and folder good practices","In order to avoid issues, the first thing to do is to follow good practices when naming and structuring files and folders. There are multiple reasons to do so:","If all workers in the same company, or all students in the same course follow the same naming conventions, it becomes easier to collaborate. In industry, companies may have their own conventions which might be different from the ones below.","Different operating systems letter case (i.e. capital vs. lowercase), accents and other special characters differently, so your files might not work identically on a Mac, on a PC or when you upload it to GitHub","One very common mistake is to work on the wrong file. This can be avoided in part by having a clear and sensible folder structure.","This will also be very convenient when, as described in the next section, you start adding images and making links to other pages within your folder.","In this course, we require that you stick to the following conventions:","Your landing page must be in the root folder of your website and named index.html.","All other HTML pages are in the same folder.","All CSS style files are within a folder named css.","All image files are within a folder named images.","All file names are lowercase only. This means that you might have to rename external images before adding them to your website.","No spaces, no accents. The only special characters you can use are hyphen (-) and underscore (_).","Examples","Folder structure","website","index.html","page-1.html","page-2.html","css","styles.css","images","image-1.jpg","image-2.png","image-3.svg","File names","All lowercase:","Welcome.html","welcome.html","No spaces, use hyphens instead:","BUas logo.png","buas-logo.png","No accents or special characters:","From Liège to Köln.jpeg","from-liege-to-koeln.jpeg","Common HTML mistakes","These are errors that everyone makes, including experienced web developers. Being able to identify and correct mistakes is one of the hardest skills in HTML development.","Missing closing tags. For example, you start a link with <a href=\"…\"> but then you forget to close it and the rest of your page becomes one giant link.","Mismatch between an opening tag and a closing tag: For example, you start with <h1> and you finish with </h2>. This often happens when you try to substitute an element for another but you don’t do it completely.","Typos or incorrect tag names. <h1> and <p> exist, but not <p1>, this is considered an error.","Errors with attributes: When writing an attribute, such the source of an image or a class on an element (e.g. <p class=\"my-class\">), spaces, quotation marks and/or the equal sign are missing.","Code that doesn’t follow your intent. Sometimes the structure is correct, but the result is not what you intend because elements are not in the right place in the tree of the document. For example, this bullet point here is not aligned because the current list item is not within the rest of the list.","Many errors won’t be visible because your browser will try to fix them — note that this is specific to HTML, other languages are not error-tolerant and will break if there is an error.","However, computers rely on binary logic and cannot guess your intent if your code is wrong. In other words, code that doesn’t follow standards may give unpredictable results.","Detecting errors: Validation","You can use several tools to detect errors:","Dreamweaver will show you errors. Read the description of the error, and check whether it corresponds to one of the errors listed here.","Check what the structure of your DOM Tree is and if it fits your intent. You can see it in Dreamweaver using the DOM panel, or in the Developer tools in a browser.","Finally, always check if your code conforms to standards at validator.w3.org. Again, error information can be interpreted by comparing it with the list of common mistakes.","For the assignments: your code must be free of errors. Please double-check with before handing in using validator.w3.org. If your page still has “warnings” (in yellow), we will accept it.","Click here to test the current page","Yes, this page has an intentional error!","What you should see when things are correct:","Document checking completed. No errors or warnings to show.","Preventing errors: Indentation","Indentation is a very simple good practice that helps you keep track of the structure of your code and avoid errors.","To use indentation, make sure you add spaces or tabs at the start of a line every time you go down one level in the structure of the tree, and remove them when you go up one level.","Indentation has no impact on the output of your code: your page will look exactly the same in the browser if you have no spaces at the start of a line.","When zooming out on the source code, the indentation shows you the outline of the document.","The example below shows the relation between indentation and structure","(Level 0)","<html>","(Level 1)","<head>","(Level 2)","<meta charset=\"utf-8\">","<title>This is the title</title>","</head>","<body>","<header>","(Level 2)","(Level 3)","<h1>Welcome to this page!</h1>","</header>","<main>","(Level 3)","<section>","(Level 4)","<p>This is a paragraph with some text.</p>","<p>And here is another paragraph.</p>","<p>","(Level 5)","<a href=\"https://www.buas.nl/\">And another one with a hyperlink.</a>","(Level 4)","</p>","(Level 3)","</section>","(Level 2)","</main>","</body>","(Level 1)","</html>","(Level 0)","↑ Back to the top of Part 2","↑ Back to the top of “Avoid HTML Errors”"]},{"title":"2.5 Link to pages and images","id":"#link","lines":["2.5","Link to pages and images","Watch on Microsoft Stream","Use <a href=\" or <img src=\" followed by the location of a page or image.","Use relative paths when needed, learn how to determine these paths.","Check that all images and links work for assignments.","When do you need this?","There are several cases when you need to create links between your page and other resources. In each of these cases, you need to put the address of the resource in the form of an URL or path.","When creating a clickable hyperlink, to navigate from a page to another page. In that case, you use an a tag with the href attribute: <a href=\"URL or path\">","When displaying an image on a page, use an img tag with the src attribute: <img src=\"URL or path\">","This also works when embedding a video or an audio file (see example in part 2.1): <audio src=\"URL or path\"></audio>, <video src=\"URL or path\"></video>","When you need to add CSS styles to your page (this is what you’ll learn in part 3), you need to create a link between your page and the CSS file using <link rel=\"stylesheet\" href=\"URL or path\">","In this course’s templates, you will also find the script tag, used to load JavaScript files that add interactive behaviour: <script src=\"URL or path\"></script>","Special Hyperlinks","You can make hyperlinks with destinations that are not web resources.","Call a phone number","<a href=\"tel:+31-76-5332203\">Call BUas</a>","Test it: Call BUas","Send an email","<a href=\"mailto:servicedesk@buas.nl\">Email BUas</a>","Test it: Email BUas","Open Maps App (mobile only)","<a href=\"geo:51.58990,4.79520\">Visit BUas </a>","Test it: Visit BUas","Absolute URLs","An absolute URL refers to the precise location of a resource online. It starts with http:// or https:// (known as the “protocol”) followed by the name of the web server (e.g. www.buas.nl).","<a href=\"https://www.buas.nl/\">A link to the BUas website</a>","<img src=\"https://www.buas.nl/themes/custom/breda_university/apps/drupal/logo.svg\" alt=\"The BUas logo on the BUas website\">","Pros of absolute URLs:","They are the same regardless of which page they are used on. The links above will work just as well here or on your own website.","You can get them easily by copying URLs from your browser and pasting them in Dreamweaver.","Cons of absolute URLs:","If you are not in control of the destination of your link, it may stop working someday.","Not suitable for internal links","Use absolute URLs when: linking to an external resource (page or file).","Relative path","A relative path is used when linking to a resource within the same web site. A relative link does not include the address of the web server.","The full URL of the resource will be calculated based on the address of the page from which it is called.","<a href=\"part-1.html\">A link to Part 1 of the guide</a>","<img src=\"images/common/logo-buas.svg\" alt=\"The BUas logo on the BUas website\">","The first link will point to https://buas-media-interactive.github.io/prj4-guide/part-1.html and the second to https://buas-media-interactive.github.io/prj4-guide/images/common/logo-buas.svg. Read the next sub-section to see how these are calculated.","Pros of relative paths:","They will work the same if you use them on your laptop, online, on a USB stick, etc.","This means you can easily work offline and/or move your content from one website to another.","Cons of relative paths:","You need to be careful with your folder and file structure.","They cannot point to external resources.","Use relative paths when: pointing to resources (pages or files) within your own website.","Determining relative paths","A relative path is the path from the HTML page you are currently editing, also known as the source, to the resource you want to point to. If this is a link, the destination is another HTML page. It this is an image, the destination is the image file.","Relative path rules","The starting point of the path is always the folder containing the source file. Think of what you would have to do to navigate to the destination. Do you need to enter another folder? Do you need to go up one level?","If the source and the destination are in the same folder at the same level, just write the name of the destination file, e.g. destination.html","If the destination is in a subfolder in relation from source same folder at the same level, type in the name of the subfolder, followed by a slash (/), followed by the name of the destination file, e.g. subfolder/destination.html","If the destination is in a folder at a level above the source, type two full stops (..) followed by a slash (/) to move up one level, e.g. ../destination.html","You can combine these rules, e.g. ../folder/subfolder/destination.html","Relative paths with Dreamweaver","Dreamweaver has a browse option to let you pick an image file, or the destination of a hyperlink. When possible, Dreamweaver will determine the relative path for you.","This doesn’t work if:","You’re working on an HTML file that has never been saved and shows as “Untitled” (because Dreamweaver doesn”t know where the file is).","Your image files are too far away from your HTML file, e.g. if they are still in your Downloads folder. You need to keep everything within the same project/website folder.","IMPORTANT: If Dreamweaver creates a path that starts with file:///, it will not work when published online via GitHub pages. For example, file:///C:/Users/velt.r/Documents/HTML/prj4-guide/ is where I keep this file on my laptop, and won’t work from anywhere else.","Relative path examples","Based on this folder structure…","website","index.html","image-index.png","folder-1","page-1.html","image-1.jpg","folder-2","page-2.html","image-2.jpg","These are the paths to use from each HTML page…","website/index.html","<img src=\"image-index.png\">","<a href=\"folder-1/page-1.html\">","<img src=\"folder-2/image-2.jpg\">","website/folder-1/page-1.html","<img src=\"../image-index.png\">","<a href=\"page-1.html\">","<img src=\"../folder-2/image-2.jpg\">","website/folder-2/page-1.html","<img src=\"../image-index.png\">","<a href=\"../page-2.html\">","<img src=\"image-2.jpg\">","All of the examples above link to the same images and HTML files, but the relative path is different because the origin of the path is different.","↑ Back to the top of Part 2","↑ Back to the top of “Link to images and pages”"]},{"title":"2.6 Manage images","id":"#manage_images","lines":["2.6","Manage images","Watch on Microsoft Stream","Use images to grab the attention of your audience.","Choose the right format for your images.","Resize them and organize them properly.","Why use images?","Our brains’ attention is attracted by visual content, in particular:","Pictures of human and animal faces, especially when they’re looking at you.","Bright colours and moving images.","Images displaying food, creating a sense of danger, or generating sexual arousal.","Attracting one’s attention is what you want to do with your audience, therefore images are essential for web design.","This photo of a cat was taken by Millie Wollney and posted on Unsplash","Image size","The words “image size” can mean two things:","The pixel dimensions. For example, the original image of this cat was 3000 pixels wide and 3000 pixels high.","The file size. The same original file was 1 megabyte (MB), which is equivalent, in terms of the space needed on your hard drive, to a text made of a million letters.","Larger images mean a higher quality, but this is limited by how big the image will be displayed in a browser.","But larger images take longer to download and need more disk space to store, which has the following downsides:","From the point of view of the website visitor:","Pages and images take more time to load. On a typical 4G or cheap DSL subscription, the original image takes a fifth of a second to load, which starts to become noticeable. On a 3G connection, it will take more than a second and will feel very slow.","If the website is browsed on a mobile phone, then this will use up some of the user’ data allowance. The cheapest mobile plans tend to have a 1 GB monthly limit, or in other words, 33 high-quality cat images a day.","From the point of view of the owner of the website: hosting is generally charged based on how much disk space and network bandwidth you are using. Big images cost more money!","The solution is then to reduce image size, which can be done in two ways:","Decreasing the pixel size","Choosing the right file format","In this example, I have reduced the image to 500 pixels wide (this is 6 times smaller). The result is an image that weighs 70 kilobytes (KB), which is 15 times smaller, and therefore 15 times faster to load.","File formats","The file format you’ll use depends on the type of image you have.","JPEG (Joint Photography Expert Group)","JPEG is the most appropriate format for photos","It uses a “lossy” compression algorithm that is very efficient at making photos smaller.","The “lossy” compression will degrade the quality of your image, and this will be especially visible on geometric shapes.","It shouldn“t be used for images that contain logos, infographics, gradients and text.","SVG (Scalable Vector Graphics)","SVG is a vector format, therefore the quality of an image is not dependent on its dimensions.","SVG files can be exported directly from Adobe Illustrator.","SVG can be used for logos, illustrations and infographics.","However, it doesn’t work very consistently with text.","PNG (Portable Network Graphics)","PNG is a format that uses lossless compression: images retain their original quality.","PNG is very performant can be used for logos, illustrations, geometric shapes, text and infographics.","Use PNG also when you have mixed content that doesn’t necessarily work well with SVG or JPEG.","The PNG compression is not very efficient with photos.","Resizing images","The easiest way of resizing images is to use the Crop tool in Photoshop. Click here for a tutorial on this tool [adobe.com].","When the same image is used multiple times at different sizes for different purposes, it is recommended that you create separate copies. If you have pages with multiple images, such as a gallery, you should all resize them to the same size and aspect ratio.","The aspect ratio of an image is how wide is it versus how high it is. A square image has a 1:1 aspect ratio, a TV (at least the ones sold in the last 15 years) has a 16:9 aspect ratio.","Original","W: 3000px","H: 4000px","ratio: 3:4","Portrait","W: 480px","H: 640px","ratio: 2:3","Thumbnail","W: 300px","H: 300px","ratio: 1:1","The image above has been resized in two different versions: a portrait for use in a page about the subject, and a thumbnail to show within a gallery of photos.","You should resize your images based on how big they will be on your web page. This is something you can measure using your browser’s developer tools. You can also use the dimensions of this page (see below).","How wide are elements on this page?","Try resizing your browser window to see the numbers below change in real time!","full width:","667px","half width:","334px","1/3","222px","1/6","111px","Check images before publishing","Please check the file size of all your images before publishing! Note that there is no strict guideline on how big an image should be, because it depends on the whole page.","For example, you could have 2 large images of 500KB each, or 50 small images of 20KB each, and reach a total size of 1 megabyte, which is a reasonable total size.","I have developed an image checker that you can use to check the properties of your image files before publishing them.","Keep good file management practices","The recommendations from the section above are still valid: Your images should all be in the images folder, their names should be lowercase only, with no spaces or special characters.","If you have many images (more than 20), consider using sub-folders to make it easier to find them.","↑ Back to the top of Part 2","↑ Back to the top of “Manage images”"]}],"meta":{"date":"2022-02-21T20:33:34.218Z","browser":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0"}}
,
{"page":"part-3.html","sections":[{"title":"3.1 Overview & Goals","id":"#overview_goals","lines":["3.1","Overview & Goals","At the end of this part, you will be able to:","Understand what CSS is and its relationship with HTML.","Use basic CSS to modify the style and layout of your website.","Get a basic knowledge of Bootstrap and understand its benefits.","Contents of this part","In this third chapter you’ll learn how to style your website using CSS. You’ll also be introduced to Bootstrap which is a “library” of CSS components that you can freely use.","In “CSS Basics”, you will learn the syntax of the CSS language and its relationship to HTML.","The section “Practice: edit styles.css” gives you step-by-step instructions to write CSS code to modify the style of your website.","Next, you learn the “basics of Bootstrap” a very popular library of CSS components that allows you to build responsive mobile-first sites.","Bootstrap can be combined with your own styles, learn how in the 5th section.","Finally you will learn how to use fonts to customize your website.","Do the work","For the assignment, and as part of our third workshop, you must style up your CV/résumé.","The requirements are that you must customize at least:","One font colour. This can be done in two ways, either by writing CSS code, or by using Bootstrap","One background colour, which can also be done both ways","One font, where you will need to use an external service such as Google Fonts, Adobe Fonts or Fontshare.","These skills will be essential as you start working on the group assignment, which must use styles to","↑ Back to the top of Part 3","↑ Back to the top of “Overview & Goals”"]},{"title":"3.2 CSS Basics","id":"#what_is_css","lines":["3.2","CSS Basics","Summary","Learn what CSS is and why we need it for styling pages.","Learn the vocabulary of CSS: rules, selectors, properties.","Learn how to link HTML pages and CSS stylesheets together.","HTML and CSS: Separating content and style","Cascading Style Sheets (CSS) are a powerful way of modifying the look and feel of a website. Although it is tightly integrated with HTML, it uses its own computing language and syntax. This supports a very powerful pattern whereby the content and its logical structure (e.g. which item is a heading, and which one is a paragraph) is separated from its visual aspect (e.g. how big is that heading, how it is aligned, what colour is it?)","What is content without style?","Click on the button below to see what this page would look like using pure HTML and no CSS at all!","Click here to toggle the page’s CSS styles","You will notice that everything on the page is still legible and visible, and that headings are still bigger than regular paragraph text.","This is because your browser has some built-in styles – but they are not visually appealing, so very few websites use them.","After you’ve had a look at the “basic” style of this page, scroll back and click on the button again","An example: The CSS Zen Garden","The CSS Zen Garden is a perfect example of what it means to separate content and style. All 218 pages of this website use the exact same HTML code, but different CSS code. See for yourself!.","CSS Zen Garden with the  “Verde Moderna” Style","CSS Zen Garden with the  “Steel” Style","CSS Zen Garden with the  “Garments” Style","CSS Zen Garden  unstyled","If you want to draw inspiration from these pages, don’t hesitate to “inspect” the page (as you learned in section 2.3 Use Developer Tools).","The CSS language","What does it look like?","This is a line of CSS code that turns all paragraphs pink:","CSS and HTML are both programming languages used for the web, but they couldn’t look more different.","HTML uses a lot of “less-than” (<), “greater-than” (>) and “slashes” (/)","CSS’ hallmark are the curly braces: { and }","Important Definitions","A Rule is a piece of CSS code (one or more lines) which tells the browser to give specific styles to specific HTML elements","A Selector is the part of the rule which says which elements the rule applies to.","A Property is an element of style that should be modified, for example the colour of the text, or the size of the font.","A Value specifies how this element is modified. It can be a specific colour (pink, #ffcccc, etc.), a size (12pt), etc.","Linking CSS Files","Although it is possible to put CSS code in HTML files, we will follow the best practices and we won’t “mix and match”.","We will therefore put our CSS code in a separate file with the .css extension. This brings several benefits:","Styles from one HTML page can be reused in another one.","It uses less bandwidth and disk space because the styles will be only downloaded once for all the pages.","It makes it easier for teams of multiple developers to work on different parts of the code (while keeping style consistency across the website).","Because the CSS rules are “elsewhere”, our browser needs to know where to find them when it loads the HTML file. This is why we add a <link> element in the head of our HTML file.","Write a <link>","The HTML file needs to have reference the CSS file using the <link> tag. The “href” attribute uses the same logic as in <a> links or the “src” of an image, as explained in part 2.","index.html","<!doctype html>","<html>","<head>","<title>This is the page's title</title>","<link rel=\"stylesheet\" type=\"text/css\" href=\"css/styles.css\">","</head>","<body>","<p class=\"myclass\"> This is a paragraph</p>","</body>","</html>","styles.css","p {","color: pink;","font-size: 12px;","}","Match HTML elements with CSS Rules","How can you define to which elements a set of CSS rules apply? This is done through a CSS selector.","There are different types of selectors, in the table you can see the most commonly used and how they work.","While each type of selector is relevant due to its characteristics, class selectors are very useful since you can reuse them when you need a specific style (different html elements can use the same class attribute). For example, this paragraph has the class “my-class” (you will see the implication very soon).","The basic selector types are:","HTML Element: selects all HTML elements of a given type","Class: selects all HTML elements with a given class attribute. Prefix the class name with a dot (.) when using this selector in the CSS file. This list item has the class “my-class”","ID: selects an HTML tag with a given ID attribute. An ID can only be used once in a document. Prefix it with a # when using this selector in the CSS file. This item has the id “my-id”","You can combine these selectors for more complex effects (e.g. selecting the first paragraph of each div with a certain class), but the three above should be sufficient for the assignment.","Selector examples","Selector type","CSS code","HTML code that gets selected","HTML Element","p { color: green; background: pink; }","Try it!","<p>A paragraph</p>","Class",".my-class { color: green; background: pink; }","Try it!","<h2 class=\"my-class\" >A heading</h2>","<p class=\"myclass  other-class\" >A paragraph</p>","ID","#my-id { color: green; background: pink; }","Try it!","<p id=\"my-id\" >A paragraph</p>","↑ Back to the top of Part 3","↑ Back to the top of “CSS Basics”"]},{"title":"3.3 Practice: Edit styles.css","id":"#practice_editing_styles","lines":["3.3","Practice: Edit styles.css","Summary","Our templates already contain custom styles, you can modify them easily.","To add another style, add a class, then change its CSS properties.","Overview","You will change the style of several elements in your CV","In this example, we will create a class that makes the text purple, italic, aligned at the centre and with an orange underline.","If you are using the prj4-cv template, you do not need to link the HTML and CSS files, we’ve already done it for you!","To do so, we will follow these steps","Open the relevant HTML and CSS files.","Create a new class in CSS.","Apply this class where we want to use it.","Edit the properties of these text.","Step 1: Open the files","Start by opening the files in your copy of the CV/résumé template","You will be modifying two files in parallel:","index.html to add classes where you want them.","css/styles.css to edit the CSS properties of the classes.","Dreamweaver will let you see the results in real time, but if you are using another text editor, or if you want to check the result in a browser, it’s important to save both files to see the changes you make.","Step 2: Create a new class","Let’s open the CSS file and create a new, empty class. I’ll call it “funky-text” but you can choose any name that you find relevant.","css/styles.css",".funky-text","{","}","Please note that the dot at the start of “.funky-text” is only used in CSS to indicate that this is a class selector.","In the HTML file (see step 3), you will use the class attribute without the dot!","Step 3: Add the class where you want it","At the moment, we haven’t changed the properties of the class, but we can already decide where we want to use it. For example, in our CV template, this could be your own name, or the title of a job description.","Locate the HTML element whose style you want to change, and add the class. There are two possibilities:","The element doesn’t have a class yet, then add the class=\"funky-text\" attribute.","The element already has one or more classes, then add funky-text to the list of classes (classes are separated by spaces).","index.html","<h1 class=\"fst-bolder funky-text\">Firstname Lastname</h1>","…","<h2 class=\"funky-text\">Professional Experience</h2>","Step 4: Add CSS properties","Now it’s time to play around and decide the style you want to give to your funky text!","We are using 4 properties here: color for the font colour, text-align to centre the text horizontally, font-style for the italics, and text-decoration for the underline.","css/styles.css",".funky-text","{","color: #8020cc;","text-align: center;","font-style: italic;","text-decoration: underline #ffcc00;","}","You will notice that colours are given using ‘hex codes’ combining 6 numbers and/or letters from A to F. Hex Codes are short representations of the Red, Green and Blue values for each colour. If you create a colour palette using Adobe Color, you will be able to copy the Hex Codes directly.","Congratulations!","Save all your files, open them in the browser, see if this works!","The properties we’ve used so far are just a few examples, you can find more on the Mozilla Developer Network or on W3Schools.","When adding styles to your document, you will notice that there are already many classes being used, that are not even part of our styles.css. That’s because they come from Bootstrap, which is explained in the next section.","Final note: the Box Model","One important use of CSS is to align elements, and to provide sufficient spacing between elements to improve legibility.","To do so, CSS relies on a concept named the box model, where each element can have three layers around it which are named, from the centre to the periphery, the padding, the border and the margin.","The difference between these three is that the padding is linked to the content and will share the same background, the border can have its own colour, and the margin is considered to be outside and will use the background of its container.","Margin","Border","Padding","Content","You can adjust the size of each of these layers, on all four sides or independently","Example code:","css/styles.css",".my-box","{","background: #f0ccff;","padding-top: 10px;","padding-bottom: 30px;","border: 4px dashed #20cc20;","margin: 20px;","}","Hello! This element has symmetrical margins of 20px on all sides, a dashed border 4px wide, and asymmetrical padding (10px on top, 30px on bottom, no padding horizontally).","↑ Back to the top of Part 3","↑ Back to the top of “Practice: edit styles.css”"]},{"title":"3.4 Bootstrap Basics","id":"#what_is_bootstrap","lines":["3.4","Bootstrap Basics","Summary","Bootstrap is a library of CSS classes, with a focus on making your website mobile-friendly.","Rather than coming up with your own CSS code, rest on the “shoulders of giants”","Use Bootstrap classes to change colours, add margins and borders, create buttons, etc.","Check part 4.4 for advanced uses of Bootstrap","What’s a library?","Bootstrap is an open-source software (OSS) library, originally developed by Twitter, and now maintained by an international team.","Bootstrap is currently used on thousands of websites across the world, as it makes the styling of web pages quick and convenient.","Using third-party libraries is an extremely common pattern in the software world, because developing software is so complex and expensive that even big companies prefer joining forces and develop open source software together.","You use Open Source Software everyday without even noticing. For example:","The Android operating system is based on the open-source kernel ‘Linux”","The Chrome","The most common database library, SQLite, is used in thousand of everyday applications, from Adobe software to car satellite navigation systems","What does Bootstrap do?","Bootstrap provides three things that are incredibly useful for web developers:","It offers standard styles for common HTML elements (<p>, <h1>, etc.) that look nicer than default browser styles.","You can choose from hundreds of css classes to add colours, font sizes, alignments, margins","It provides complex components such as buttons, cards, alerts, etc.","Bootstrap’s approach is to help you build mobile-friendly responsive websites. Remember that the majority of your audience will read your website on a mobile!","To learn about Bootstrap’s capacities and find examples you can copy, check the official Bootstrap documentation.","Adding Bootstrap to a project","To use Bootstrap’s styles, you must link the Bootstrap CSS file in your HTML file. This can be done in two ways:","You download bootstrap.css from the Bootstrap website and put it in your CSS folder. You then make a link to that file based on your folder structure.","<link rel=\"stylesheet\" href=\"css/bootstrap.css\">","This is called a “local installation”","You link towards a copy of that file that is hosted on a Content Distribution Network (CDN).","<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css\">","In addition to the link to the CSS file, you need a link to a JavaScript file which provides support for dynamic interactive behaviour, such as collapsible menus (e.g. see what happens here when using the search function).","You won’t need to worry about this, Bootstrap is pre-installed (using the CDN method) in your CV template.","Bootstrap’s default styles","See below how simple elements look like with built-in browser styles and with Bootstrap styles.","Default Browser styles on Chrome","Default Bootstrap styles","The main differences are that Bootstrap uses a sans-serif font, and that it removes some of the spacing between the elements on the page and the frame of the browser.","Colours and text","Bootstrap uses a default palette where colours are named based on their function:","Primary","Secondary","Success","Danger","Warning","Info","Light","Dark","You can use each of these colours as a text colour, by using a class which is text- followed by one of these colours, e.g. text-danger for red or text-primary for blue.","You can also use them for backgrounds, by using a class starting with bg- such as bg-danger or bg-primary","Use classes fw-bold for bold text, fst-italic for italic text, text-decoration-underline for underlined text. These classes have the same effect as <strong>, <em>, <u>, with the advantage that they can be combined and/or added to existing elements.","Text alignment can be controlled by classes text-start, text-center and text-end.","text-end means right-aligned (or left-aligned in Arabic, Hebrew, Persian, etc.).","Find more about text classes in the Text section of the Bootstrap docuentation.","In practice:","Code:","<p class=\"text-center text-success\">This paragraph is centred (<em>text-center</em>) and has green text (<em>text-success</em>). It contains a <span class=\"bg-danger text-white fw-bold\">span with a red background (<em>bg-danger</em>) and white (<em>text-white</em>), bold (<em>fw-bold</em>) text.</span></p>","Result:","This paragraph is centred (text-center) and has green text (text-success). It contains a span with a red background (bg-danger) and white (text-white), bold (fw-bold) text.","Box model classes","As we discussed in the previous part, CSS relies on a box model to manage spacing between elements. Spacing is essential and makes your pages more legible and the their structure clearer.","Bootstrap provides a series of classes to create margins, paddings and borders.","For margins and padding, class names are a combination of:","m for margin, p for padding","…followed by information about the position: no letter for margins/paddings on all sides, x for horizontal (left and right), y for vertical (top and bottom), s for start (left), e for end (right), t for top and b for bottom","…followed by an hyphen/dash","…followed by a number from 0 to 5 corresponding to the size of the margin/padding.","For example, m-1 gives a small margin on all four sides, my-5 gives a large margin on the vertical axis, px-3 gives a medium padding on the horizontal axis and pt-0 removes padding at the top.","Borders can be given a specific colour and/or be rounded. In that case, you need to combine multiple classes: border to add a border, border-danger to make it red and rounded to make it rounded.","Margins and paddings don’t have a colour of their own — paddings take the colour of the element and margins take the colour of the parent.","In practice:","In the examples below, check the position of the blue box within the red one. Borders are identical in all examples, but the paddings and margin of the blue box vary.","Code:","Result:","<div class=\"bg-danger border border-3 border-dark\">","<div class=\"bg-primary border border-3 border-info rounded text-white\">","No margin, no padding.","</div>","</div>","No margin, no padding.","<div class=\"bg-danger …\">","<div class=\"bg-primary … m-3\">","Size 3 margins on all sides, no padding.","</div>","</div>","Size 3 margins on all sides, no padding.","<div class=\"bg-danger …\">","<div class=\"bg-primary … p-2\">","No margin, size 2 padding on all sides.","</div>","</div>","No margin, size 2 padding on all sides.","<div class=\"bg-danger …\">","<div class=\"bg-primary … mt-2 mb-5 ms-4 me-1 px-3 py-1\">","Margins and paddings of different sizes on different sides.","</div>","</div>","Margins and paddings of different sizes on different sides.","Components","Bootstrap provides a comprehensive library of UX patterns called components, that you can reuse just by copying, pasting and customizing blocks of code.","Components include cards, carousels, navigation bars, accordions, badges, and many more…","Find out more by checking:","Part 4.4 (UX Patterns) of this guide. Use the Developer Tools or “View Source” to copy some of the examples.","The list of components in the Bootstrap documentation.","A visual overview of all components called The Bootstrap cheatsheet.","Don’t forget that all of the above are open-source resources. Copying open-source code is not cheating, it’s actually good practice.","Example, a button:","This example shows the code of a button that I copied from the buttons page in Bootstrap’s documentation.","It needs two classes: btn to style it as a button and btn-primary to make it a blue button.","Code:","<button type=\"button\" class=\"btn btn-primary\">Click me!</button>","Result:","Click me!","Yay!","↑ Back to the top of Part 3","↑ Back to the top of “Bootstrap basics”"]},{"title":"3.5 Combine Bootstrap and your own CSS","id":"#combine_bootstrap_css","lines":["3.5","Combine Bootstrap and your own CSS","Summary","Learn when you should use Bootstrap and when you should use your own CSS classes.","Learn how to do “mix-and-match” Bootstrap and custom styles.","When to use what?","The basic rule is that you should use Bootstrap when it does what you want to do, and add your own styles when you need more customization.","Use cases","When to use Bootstrap classes?","When to create your own CSS?","Colours (including background and text colours)","When one of Bootstrap’s built-in colours suits you.","When you want to use specific colours, such as those defined in your brand identity.","Fonts","Bootstrap only gives you access to a default sans-serif font. Use Bootstrap classes for effects such as bold type, italics, underlines","When you want to use any font that suits your brand identity, follow the instructions below in part 3.6.","Layout","Use a combination of the margin/padding and alignment classes (see above) as well as the Bootstrap grid (see part 4.5)","Layout is one of the most complex parts of CSS. We do not recommend using your own CSS.","UX Components (e.g. buttons, navigation bars, carousels)","Bootstrap provides a wide library of UX Components. Check part 4.4 for examples.","Add your own CSS to adjust the colours and sizes of these components to your needs.","How to combine?","Try following these steps:","Start by looking for Bootstrap classes that do what you want to do.","Add these classes to the element where you need them.","Create an additional class for the additional styles you need (see section 3.3 for details of that step).","Avoid conflicts","Some instructions in your own CSS file may be contradicting the ones from Bootstrap. For example, a Bootstrap class gives one colour to the text and yours gives another one. Your browser will follow complex rules to decide which style should be applied and which should be ignored.","To avoid this type of conflict, you should:","Remove any Bootstrap class that you don't need. For example, if you have a class which is \"bg-danger\" (red background) and you're adding your own class which also changes the background, you no longer need the Bootstrap one.","Make sure that your own CSS file is called after the Bootstrap CSS file. This is the case for all templates we provide.","If this isn’t sufficient, you can increase the priority of your CSS styles by adding !important after the CSS properties.","To achieve this result…","Welcome","to a world of endless possi­bilities in style","Combine Bootstrap and CSS this way","This is a simple HTML structure, with one <div> element for the frame, containing a <h4> heading and a <p> paragraph.","The following styles are done with Bootstrap","On all 3 elements:","Margins and paddings, with classes such as m-1 py-5.","On the main frame:","Layout classes (not explained in this guide, please check the Bootstrap documentations), with d-flex align-items-center justify-content-center","On the heading:","Text colour (text-white) and size (display-5)","The following styles need specific CSS styles","On the main frame:","Border styles, using the border CSS property.","The use of a background image, with background-image","On the heading:","Text rotation, with writing-mode and transform.","The use of a web font called Chillax (see section 3.6 about fonts)","On the paragraph:","The pink text colour (using the color property with a value of #ff80c0)","The neon glow effect (with the text-shadow property).","HTML Code","<div class=\"m-1 py-5 d-flex align-items-center justify-content-center owncss-div\">","<h4 class=\"m-0 text-white display-5 owncss-heading\">Welcome</h4>","<p class=\"m-0 fs-2 lh-1 w-50 text-center owncss-paragraph\">to a world of endless possi­bilities in <strong>style</strong></p>","</div>","This HTML code contains references to many Bootstrap classes:","m-1 py-5 d-flex align-items-center justify-content-center on the <div>","m-0 text-white display-5 on the <h4>","m-0 fs-2 lh-1 w-50 text-center on the <p>","In addition, three CSS classes were created for the purpose of styling these elements: owncss-div, owncss-heading and owncss-paragraph","CSS Code",".owncss-div {","background-image: url(../images/common/hero-bg.jpg);","background-position: center;","border: .5em double #80ff80;","border-radius: 1em;","}",".owncss-heading {","font-family: 'Chillax';","writing-mode: vertical-lr;","transform: rotate(180deg);","}",".owncss-paragraph {","font-family: 'Plein';","color: #ff80c0;","text-shadow: 0 0 5px #ff80c0;","}","↑ Back to the top of Part 3","↑ Back to the top of “Combine Bootstrap and your own CSS”"]},{"title":"3.6 Use Web Fonts","id":"#using_fonts","lines":["3.6","Use Web Fonts","Summary","Learn how to style Fonts using CSS.","Learn how to install Web Fonts.","Learn how to style hyperlinks.","Fonts in CSS","Fonts in CSS are defined with the font-family property. If you only use this property, you have to be careful, because you only have access to fonts that are installed. If you want to use additional fonts, you need to embed a web font in your page","It's common practice to start with your desired font and then add a couple of family font values as a \"fallback\" to ensure maximum compatibility across browsers and devices (in the case your desired font is not available the browser will use the next font listed in the property values). These \"fallbacks\" are usually generic font families such as: Serif, Sans-serif, Monospace, Cursive, Fantasy.","Installing fonts","A popular method of installing fonts is by using the HTML <link> tag to embed them in your website. As you already know, the <link> elements should go in the <head> of your document and they are used to reference external resources. In the case of fonts it will reference the resources providing the font. It's good practice to put the <link>s to the font resources AFTER the <link> to the CSS.","You then can use the installed font by using font-family property in your CSS to specify the font you have installed.","Installing Google fonts","Google Fonts is the most popular service for Web Fonts. To use one of their fonts:","Go to https://fonts.google.com/ and choose a font you want to use.","Click on “Select this style” (do not Download).","A sidebar opens where you can see the selected font(s) and instructions.","Click on “link” and follow the instructions.","Google gives you one line of code to put in your HTML file, and one to put in your CSS file.","Please note that having Google Fonts activated on your page means that Google can track who is visiting your web site. Nothing is ever completely free!","Styling fonts: an example","Let's check an example to see different things that we can do to modify the look of fonts.","This is the HTML code of the website that will be styled. You can see that lines 7, 8, 9 and 10 have <link> tags embedding Google Fonts.","This is the CSS code","css/styles.css","h1 {","font-family: \"Roboto Mono\", monospace;","font-size: 60px;","font-weight: bold;","text-transform: uppercase;","text-shadow: 5px 5px pink;","}","p {","font-family: \"Nunito Sans\", sans-serif;","color: grey;","}","p.myclass {","font-family: \"Nunito Sans\", sans-serif;","font-style: italic;","text-align: center;","color: grey;","}","As you can see the example uses two Google fonts that have been installed: Roboto Mono and Nunito Sans (and each one of these fonts has a \"fallback\": monospace and sans-serif respectively). It also makes use of different properties to modify the text, some are self explanatory like font-size, text-align and color, but others are a bit more interesting like:","text-transform: this property will transform any lower case text into uppercase automatically.","text-shadow: This propery creates a shadow of the text. And as you can see I have used three values: 5px correspods to the h-shadow, 5px to the v-shadow and pink to the color of the shadow.","This is how the website in the example would look like:","Styling links","While learning about fonts, let's take the opportunity to see how can we style links.","By default, unvisited links are styled as blue, and previously visited links are purple, so let's check how can you style them as you please.","In order to do it we first need to understand Pseudo-Class selectors which are those that specify a special state of the selected element. So for example, in the case of a hyperlink (<a>), you can specify how you want it to look when:","The link has been visited","The link has not been visited","The user hovers the mouse over it","This is the syntax of pseudo clases, which as you can see uses a colon (:)","selector:pseudo-class { property: value; }","Styling links: an example","In the previous example you can see that in line 15 of the HTML code there is a <a> element with a hyperlink that has been visited but has not been styled (it's using the default purple color of visited links).","Let's style the hyperlink to make it fit with the overall style of the website by using pseudo-class selectors in the CSS code.","css/styles.css","a:link {","color: black;","}","a:visited {","color: grey;","}","a:hover {","color: black;","background-color: pink;","}","As you can see the example uses three pseudo-classes:","a:link styles the link that has not been visited (black).","a:visited styles the link that has been visited (grey).","a:hover styles how the link looks when the user hovers the mouse over it (black with a pink background).","This is how the link in website would look like now:","Fonts in Bootstrap","Bootstrap comes with a series of classes that allow you to easily control the alignment, weight, size and other characteristics of your text and fonts.","In section 3.4 Bootstrap Basics - Colours and Text of this guide you can find an overview of classes that are very useful to modify text.","In the Text Utilities section of the Bootrap website you can find detailed Documentation and examples of other classes including Bootstrap's custom font sizing classes.","↑ Back to the top of Part 3","↑ Back to the top of “Use Web Fonts”"]}],"meta":{"date":"2022-02-21T20:33:54.827Z","browser":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0"}}
,
{"page":"part-4.html","sections":[{"title":"4.1 Overview & Goals","id":"#overview_goals","lines":["4.1","Overview & Goals","At the end of this part, you will be able to:","Use the provided templates to achieve the group assignment.","Modify more complex elements such as carousels and grids.","Collaborate efficiently to deliver the assignment.","Contents of this part","This final chapter helps you apply the knowledge you gained in the individual assignment to start working on the group assignment.","First, we provide a brief reminder of the design process, and the deliverables you will have to provide for the justification document.","In the next section, we guide you’ through the templates that we’ve developed for the course.","Then you learn how to implement common UX patterns using Bootstrap.","One of these patterns is the grid, which is so important we gave it its own section.","Finally, you get some tips on how to collaborate efficiently and avoid errors.","What you need to do","This part of the guide will support you in completing the group assignment:","You start by making design decisions and thinking about what your website will contain and what","The justification document will contain information about your design decisions and. Build upon the content from PRO1 and PRJ1 to write this document.","To start the actual development work, copy the template and create your own group repository – choose the name carefully so your website’s URL reflects the name of your brand. This is explained in Chapter 1.","↑ Back to the top of Part 2","↑ Back to the top of “Overview & Goals”"]},{"title":"4.3 Your design process","id":"#web_design","lines":["4.3","Your design process","Summary:","The process is similar to the app design process you went through in PRJ1.","This section summarizes the process and clarifies the deliverables.","You will have to deliver prototypes and test them.","Deliverables","As part of the main PRJ4 justification document, you will deliver justifications for your web design choices.","The “website justifications” chapter will contain 2 parts:","A list of design elements alongside their justifications:","A colour scheme (with colour codes)","Font choices","User interface patterns (e.g. grids, carousels, menu organizations etc.)","The structure of the navigation and content (e.g. how content units are distributed across pages)","A scanned paper prototype","A testing report, including:","Testing goals","The testing methods, i.e.","Information about test participants (number, match with target audience, etc.)","Information about the setting (which material is used, is it done remotely, on campus, at home, etc.)","Information about how the test is conducted (what instructions are given, how it is recorded, etc.)","Testing results","Issues and positive points that have been identified, ranked by importance.","Improvements that have been conducted on the final website.","When writing design justifications, students must clearly relate them to:","The theory and vocabulary of design","Insight about the audience developed in the other units","The marketing, communication and product development strategies developed in other students","The appendix to the justification document must contain evidence of testing, such as blank consent forms, photos and/or transcripts.","Deadlines","The full website and justification document will be due on the final deadline of Thursday 14 April 2022. There are some intermediary deadlines for your progress on the website:","At the end of Project Week 5 (Calendar Week 11, 14 – 18 March 2022), you must have a landing page ready and published online, which only needs to include the name, logo and colours of your brand. One of the goals of this deliverable is that you already have an address for the website that you can use in your communication.","At the end of Project Week 6 (Calendar Week 12, 21 – 25 March 2022), you must have completed the paper prototype for your website.","During Project Week 7 (Calendar Week 13, 28 March – 1 April 2022), you should work on user testing on the basis of your paper prototype. This is self-directed work that you must plan yourselves.","During Project Week 8 (Calendar Week 14, 4 – 8 April 2022), you will receive final feedback on your design and your justification document.","The retake deadline is at the end of the semester, on Friday 10 June 2022.","Prototyping","You will create the prototype in 3 steps, starting by defining your content, then creating a task flow and then designing the individual screens.","Define and organise content and features","Start by defining the content you want to put on your website, based on the audience you’re targeting and the needs of your audience.","If you are designing a content-heavy website, like a blog or a portfolio, think of what categories your content will fit into. As with project 1, try to think about whether your content is linked to a specific time.","If you are designing an app, try to think in terms of actions and activities that users can do. For example, this could be “finding when the next bus comes” and “buying a ticket”.","At the moment, think in broad categories, rather than in terms of specific pages or screens you want to include.","Write down your units of content on cards. Once you’ve done that, try to rearrange the cards to see if they are some natural groupings of units of content that seem to fit together.","Divide your content into pages and design a task flow","Once you have some high-level categories of content, start thinking about how this would translate into pages (for a website) or screens (for a mobile app).","These pages or screens are generally more detailed than the units of contents or actions that you’ve developed in the first step. For example, a page in a portfolio can be “list of all photos”, “list of architecture photos” and “an individual photo”. For an app, maybe the payment part of your app would contain screens for “enter card details”, “review payment” and “receive purchase confirmation”.","In some cases, you will choose whether you group pieces of content in a single page or split them across pages. Scrolling to access more content is now a popular navigation pattern, and Bootstrap’s documentation uses scroll-based navigation extensively.","Once you’ve defined the pages or screen, start designing a task flow. This includes identifying:","Which is the landing page or home screen?","Which pages are directly reachable from the home?","Which pages act as hubs to go to other pages?","Are there pages or screens that must be visited in a single sequence?","Write down all pages as small box and draw arrows to show how they are connected through links and what sequence users should follow. If you have a “main menu” that is on all pages and links to many other, create a box for it to avoid having arrows everywhere.","Now our restaurant website could look like this:","Two pages in a paper prototype.","Testing","In the next step, you will have to test the prototype and look at how usable it is.","Preparing for a usability test","During the usability test, you will ask potential users or customer to try out the feature of your website or app.","You should prepare “scenarios” which describe tasks that users have to perform.","Here are a few tips for preparing a good test:","When you create scenarios, be generic and focus on high-level activities. For example, for our restaurant website, “book a table for 4 people tomorrow” is a good generic scenario, while “find out which page has the menu” is too specific and will not let users explore your interface.","Make sure you do not provide too much guidance to your users, because otherwise your usability test will end up being a guided tour rather than an actual test of how people understand your design. Avoid instructions like “click here” in your scenarios.","Make sure your prototype can “react” to the users. Prepare post-its that show different states of the same page, so for example you can change the date or time of the reservation just by substituting post-its.","Do a quick run of the testing session for yourself to make sure that you have prepared all the screens or pages that are necessary to run the scenario.","Write down how you would perform the scenarios, so you can prepare the pages in the right order during the test.","What to look for during a usability test","When testing the usability of a product, we want to check the “5 Es of usability”:","Is the product Effective: Is the user able to do what they want to do or not?","Is it Efficient: Can the user achieve their goals quickly, or is it slow and complicated?","Is it Engaging: Does the user find it pleasant and satisfying, or is it dull and frustrating?","Is it Error tolerant: Can the user see if they’ve made mistakes and correct them?","Is it Easy to learn? Can new users quickly understand how to operate the product?","Ask your test users to perform your scenarios, and take note: Where are they hesitant? Where do they make mistakes. Listen to their feedback too.","Most importantly: try not to give them too many clues. If they can’t find a page or do something, then blame the design not the user.","In paper prototyping, you can use post-its creatively to simulate how a page works. Check below for an example.","This is the same paper prototype as above, but with information added via post-its","During the usability test, take notes and/or record the session. If you record audio or video for participants, you normally need to make them sign a consent form that clearly states the purpose of data collection.","Finish the sessions with “debrief” questions, where you ask your participants what they thought of your product and of the testing session. They may provide you with additional feedback that simply observing their behaviour couldn’t elicit. For example, even if they found the experience easy and straightforward, they might not think they would use your product in real life. Try to find out the reasons.","Reflecting on a usability test","Based on your notes and recordings, start by summarizing the issues you’ve found.","Group the issues based on:","What parts of the website or app they affect","How serious they are – do they make the product unusable or are they small distractions?","Whether they involve changing superficial aspects (e.g. button size) or if they would require changing the whole concept of the product.","Now you’ve written your findings, start writing recommendations and for each of the issues, write down suggestions for fixing it.","Don’t hesitate to create a new paper prototype that implements your recommendations before starting to build your website. You can go through the whole cycle of prototyping and testing multiple times, it will always be quicker than coding the wrong product. In industry, because you would have to pay a professional software developer, this also means that prototyping and testing can save you a lot of money!","↑ Back to the top of Part 2","↑ Back to the top of “Your design process”"]},{"title":"4.3 A tour of our templates","id":"#templates","lines":["4.3","A tour of our templates","Summary:","You can use the prj4-group-template repository to get started.","It includes the UX patterns described in the next section.","The buas-media-interactive profile contains more examples.","The group template","The easiest way to get started with group work is to use the prj4-group-template repository. This is not mandatory (see below for alternatives).","Read the source code for the group template at github.com/buas-media-interactive/prj4-group-template","Copy the template to your own repository directly from github.com/buas-media-interactive/prj4-group-template/generate","See what the template looks like when published at buas-media-interactive.github.io/prj4-group-template","Files in the group template","The files in the group template follow the conventions introduced in part 2","In the root folder:","The index.html page, which is the landing page that you get if you do not type any HTML file name.","All other HTML files. This includes:","corporate.html, that you can edit to create a “corporate” section which will be used to grade some elements of the Content, Marketing and Management units.","landing.html which you can use as a minimal landing page while your website is under construction.","If you decide to divide your content in multiple pages, you will create additional HTML files here. You can duplicate the index.html file to do so (this is how the corporate page was create).","You will notice a file named README.md. It is not part of the website itself but it provides useful information that is displayed on the GitHub repository","In the images folder:","This contains all images used in the template. Please remove the ones you aren’t using.","Please notice that all files are smaller than a megabyte and only one is bigger than half a megabyte.","File formats were chosen based on the content: SVGs for logos, JPEGs for photos, PNGs for content that includes gradients and text.","Social media icons were obtained via the Font Awesome icon library.","In the css folder:","This contains a single CSS file, which is used to create all bespoke styles that couldn’t be made using only Bootstrap.","UX patterns in the group template","Here is a list of patterns used in the index.html page.","A navigation bar","A hero section with two buttons and a gradient background","A carousel with three images","A responsive grid with cards and placeholder images","A footer","Some CSS customization: the navigation bar, hero section and body have their own background color","Google Fonts, with the Raleway font","More details about these patterns are provided inthe next section.","Additional templates and sources","The buas-media-interactive profile on GitHub contains multiple repositories that you can draw inspiration from:","You can reuse elements from the individual website (prj4-cv)","The “CoTravel” website (prj4-cotravel) is an advanced example that showcases additional patterns:","A contact form which is hidden in an “off-canvas” panel","An interactive map","A tabbed navigation system (linked to the map)","A calendar","The present guide (prj4-guide) is built with the exact technologies and skills you are learning here!","Beyond our own examples, the Bootstrap documentation has a full list of examples.","You can also draw inspiration from any website you like!","↑ Back to the top of Part 2","↑ Back to the top of “A tour of our templates”"]},{"title":"4.4 UX Patterns for the web","id":"#ux_patterns","lines":["4.4","UX Patterns for the web","Summary","Menus, navigation bars, hero sections, carousels, scrollable pages etc. are common UX patterns.","They form a vocabulary that your website visitors will recognize and this will make interaction more intuitive.","Many such patterns are available “out of the box” in Bootstrap and can be customized.","Why use UX patterns?","Think of the web pages you visit and apps you use every day, for example:","Checking your email,","looking for train tickets,","buying clothes,","reading news,","sharing content on social media.","Now think of how all these sites and pages tell you how to use them and what things are…","How do you know if there is an element you can press or click?","How do you know if an item (e.g. a news story, a piece of clothing) is part of a list of similar items, and/or whether it is part of specific categories?","How do you know where to find informations relating to your personal profile?","How do you know where you are within the process of purchasing a product?","How do you know what to do if you want to restart the navigation or shopping process from scratch?","All this is done by applying UX design patterns. Just like the cinematographic language (or film grammar), UX elements can combine to help website visitors make sense of their experience.","What makes UX patterns especially powerful is that:","They are based on psychological principles (e.g. affordances and gestalt-theorie).","They have become so ubiquituous that visitors can apply their knowledge of using other apps and websites to visiting yours.","UX Patterns in Bootstrap","Bootstrap, which you’ learned about in Part 3, and that is used in all the PRJ4 templates, gives you access to many UX patterns.","You can find a list of these patterns in the Bootstrap documentation at getbootstrap.com/docs or just below.","For each of these UX elements, the Bootstrap documentation gives you an example of code you can copy, tweak and reuse to achieve the same result.","Copy","<div class=\"spinner-border text-primary\"></div>","An example of what you find in the Bootstrap documentation","Some of these patterns are already included in the PRJ4 repositories: this includes the navigation menu at the top of this page.","All these elements can be personalized, either by adding extra Bootstrap classes, or by creating your own styles in CSS.","Buttons","Buttons indicate places where you can click. Combined with text that uses action verbs, they are great to offer Calls-To-Action (CTAs) for your visitors.","Find code snippets for buttons at getbootstrap.com/docs/5.1/components/buttons/","Bootstrap","buttons","exist","in","many","different","colours","as","well","as","outlined","buttons","large ones","and small ones","Cards","Cards are great for showing small pieces of self-contained information. They can be used to list:","members in a team","products in a range","photos in a gallery","steps in a process","Find code snippets for cards at getbootstrap.com/docs/5.1/components/card/","Our chef","Our kitchen is managed by the most innovative chef in town! All our dishes are the product of her impeccable craft and her relentless creativity!","Read her bio!","Our farmers","We only use fresh, seasonal, locally grown produce for our meals!","See where our food comes from!","Carousels","Carousels (whose name comes from the fun fair attraction also known as “merry-go-round”) are a great way of showcasing visual content in a dynamic way.","Be careful with carousels:","Do not put too much text, since your visitors won’t have time to read it.","Too many moving images can cause overstimulation and can be unpleasant for some of your visitors.","Find code snippets for carousels at getbootstrap.com/docs/5.1/components/carousel/","Ella the Elephant","Gilbert the Giraffe","Florence the Flamingo","Previous","Next","Navigation bars","Almost every website now uses some form of navigation bar, at the top (which you can see on this page), or on the side.","Find code snippets for buttons at getbootstrap.com/docs/5.1/components/navbar/","The example on the right is a bit more complex, as it makes use of two additional Bootstrap components:","The collapse system to hide and show content","A close button","Bootstrap's implementation of Flex layouts to move the bar from vertical to horizontal","Menu","Home","Link to BUas","Dropdown","One sub-item","Another sub-item","Search","Example of a side navigation","Click on the BUas logo or on the “hamburger menu” to expand the menu.","Click on the cross or on the logo to collapse again","↑ Back to the top of Part 2","↑ Back to the top of “UX Patterns for the web”"]},{"title":"4.5 The Bootstrap Grid","id":"#bootstrap_grid","lines":["4.5","The Bootstrap Grid","Summary","Almost all websites use grids to align and organize content","Bootstrap offers grid classes to divide your content in 2, 3, 4, 6 or 12 equal-sized columns","Grids can be made responsive: use different column sizes for the mobile and the desktop version of your site.","Why use grids?","Grids are a powerful way of implementing design principles such as balance, hierarchy and grouping, as well as guiding the eye of the reader.","Grids give a sense of order to complex web pages and help understand the logic between units of content.","As a result, every website that has to display a significant amount of content uses grids, from news websites to web shops and social media (Think of the Instagram grid!)","The Conversation divides its page in 8 equal columns","Basic code for grids","To create a grid, you need to start with a “container” block, then put a “row” block inside, and then fill it with as many columns as you want, using the col class inside. By default, all columns will have equal size. In the example below, you have three columns in the first row, and four in the last row.","See the example below for how to create containers, columns and rows that follow the default behaviour of being equally sized and filling the whole width.","<div class=\"container\">","<div class=\"row\">","<div class=\"col\">…</div>","<div class=\"col\">…</div>","<div class=\"col\">…</div>","</div>","<div class=\"row\">","<div class=\"col\">…</div>","<div class=\"col\">…</div>","</div>","</div>","Column sizing","You can specify the width of a column. Like the BBC website, Bootstrap bases its grid on 12 vertical stripes. Column sizes are defined based on the number of grid units, or vertical stripes they occupy. To specify the size of a column, just change its class name to “col-n”, n being the number of grid units.","1","2","3","4","5","6","7","8","9","10","11","12","col-1","col-11","col-2","col-10","col-3 (¼ of container)","col-9 (¾ of container)","col-4 (⅓ of container)","col-8 (⅔ of container)","col-5","col-7","col-6 (half of the container)","col-2","col-1","col-3","1","2","3","4","5","6","7","8","9","10","11","12","If the total value is bigger than 12, then the Bootstrap grid will use as many rows as needed.","You can make equally spaced columns by dividing 12 by the number of columns","Number of columns","12","divided by n","= ?","Class to use","Result:","2","12","divided by 2","= 6","col-6","1","2","3","12","divided by 3","= 4","col-4","1","2","3","4","12","divided by 4","= 3","col-3","1","2","3","4","6","12","divided by 6","= 2","col-2","1","2","3","4","5","6","Responsive columns","One essential feature of Bootstrap’s grid system is the ability to create grids that work differently at different screen sizes, from mobile phones to very large screens.","The image below shows an example with the same content on a mobile, tablet and laptop screen. On the smaller device, the grid is one column, on the medium one, it’s two columns, and on the large one it’s four columns.","Bootstrap offers 6 different base screen sizes for its responsive layout, from XS to XXL","Mobile phones (in portrait mode) generally correspond to the extra small size.","Tablets may be medium or large.","Larger screen sizes are generally found on laptop and desktop screens.","To define responsive behaviours, you have to use an “infix” in the column class name. For example, adding -md- inside the col-4 class (which makes 4 unit-wide columns, i.e. ⅓ of the screen) turns it into col-md-4 which only has this behaviour for the medium size (and larger).","Use the examples below, or check the official Bootstrap documentation on breakpoints and grids for more information.","Responsive example","If you're on a laptop, try resizing your browser window to see changes.","Your current screen size is:","Extra Small (no infix)","Small (-sm-)","Medium (-md-)","Large (-lg-)","Extra Large (-xl-)","Extra Extra Large (-xxl-)","<div class=\"container\">","<div class=\"row\">","<div class=\"col-12 col-md-6 col-xl-3\">…</div>","<div class=\"col-12 col-md-6 col-xl-3\">…</div>","<div class=\"col-12 col-md-6 col-xl-3\">…</div>","<div class=\"col-12 col-md-6 col-xl-3\">…</div>","<div class=\"col-12 col-md-6 col-xl-3\">…</div>","<div class=\"col-12 col-md-6 col-xl-3\">…</div>","</div>","Explanation: responsive breakpoints","This section explains how the code shown aboveon the left works.","Each grid item uses the classes col-12 col-md-6 col-xl-3, which trigger different rules at different screen sizes.","Each responsive size is called a breakpoint. The table below shows what happens at each breakpoint:","Breakpoint name","Class infix","Screen width","Rule followed","Resulting layout","X-Small","None","<576px","col-12","Full width","Small","sm","≥576px","No explicit rule, follows rule from xs","Full width","Medium","md","≥768px","col-md-6","2 columns","Large","lg","≥992px","No explicit rule, follows rule from md","2 columns","Extra large","xl","≥1200px","col-xl-3","4 columns","Extra extra large","xxl","≥1400px","No explicit rule, follows rule from xl","4 columns","The order of classes doesn’t matter for these rules: When there is no explicit rule, your grid shows the behaviour associated with smaller","↑ Back to the top of Part 2","↑ Back to the top of “The Bootstrap Grid”"]},{"title":"4.6 Tips for Collaboration","id":"#collaboration","lines":["4.6","Tips for Collaboration","Summary","Keep track of what each other is doing.","Synchronize often, before and after working.","Tips for starting","Creating the repository","The easiest way to start is by copying the group template, but before you click on “generate”, think of the following questions:","Think of how you want to name your group repository!","If you use an organization profile (click here to create one), then the name of your repository doesn't need to include your profile name. This is the case for this guide.","If you call your repository [organization or user name].github.io, then this will be also your URL. For example, the repository at github.com/buas-media-interactive/buas-media-interactive.github.io can be visited at buas-media-interactive.github.io","Dividing work","If you want to achieve a consistent website, the first page is the one that will take the most work, the other ones being variations where you only change the content. It can be a good strategy to start working on a page that is the most “standard” possible – i.e. one that has the same layout and components as most others – rather than the front page. Choose the components you need to use there, and don’t hesitate to use this page as a sort of “style guide” from which you can generate all other pages.","Decide on a way to divide work. This could be:","Assigning different pages to different students","Giving different roles: one student prepares the image assets, another one builds the headers and footers, another one works on the main grid, etc.","Make sure that all the common elements are discussed thoroughly before distributing work: colour schemes, style guides, fonts, logos, should be decided together.","Tips for synchronizing","The most important tip is that you should synchronize as often as necessary, before and after working on shared code.","Most of the difficulties that teams encounter when collaborating comes from either trying to work on the same thing at the same time or from not being aware of what others do.","Committing and Synchronising your changes takes a few seconds, but it will save you time in the long run.","If one of you makes important changes at some point, do not hesitate to send a message to the rest of the team so they can update their version and see these changes.","Branches are another way of working which helps you work in isolation, but they are trickier to use.","Example workflow","Following the steps below will help you prevent errors:","Start by creating the group repository.","Add contributors to the group repository: all members of the team should be able to edit. At this point, all team members should start synchronizing","Create a landing page. This should be simple enough that it doesn’t require complex collaboration.","Publish the group repository via GitHub pages.","Discuss web design and divide roles.","Every time a student edits something, follow the steps below:","Go to GitHub Desktop and click on Fetch origin to retrieve the latest version of the group website.","Go to Dreamweaver to edit HTML code.","After editing, save the files on your laptop.","Then commit and push in GitHub.","Never assume that there are no changes to synchronize or that your changes won’t affect others, synchronize every time!","Always check the result on GitHub Pages. Never assume that things that work on your laptop will work online.","Double-check the group checklist before the final hand-in.","↑ Back to the top of Part 2","↑ Back to the top of “Tips for Collaboration”"]}],"meta":{"date":"2022-02-21T20:34:10.345Z","browser":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0"}}
,
{"page":"checklist-individual.html","sections":[{"title":"Individual Assignment Checklist","id":"","lines":["Individual Assignment Checklist","Deliverable description","Create your own CV/resumé based on the template at https://github.com/buas-media-interactive/prj4-cv/","Deadlines","First opportunity: Friday 18 March 2022 before 23:59","Retake opportunity: Friday 10 June 2022 before 23:59","Mode of delivery","Deliver the actual website by using GitHub pages (see details in Part 1 of the guide).","To provide the link to your website, fill in the form below and upload to Teams Assignment.","Assessment criteria","Assessment criteria","Pass/Fail","Assessment indicators","Content updated","All text has been adapted to match the student’s personal resumé.","Styles updated","Student has modified at least one text colour, one background colour and one font.","Assets packaged","Student’s portrait and icons for schools and/or employers are packaged alongside the resumé.","Website published","The website is published via GitHub Pages via the student’s own GitHub account, and can be visited from any device.","Code quality","The website is error-free: it includes no broken image/link/font installation, and there are no errors when checking with the w3c validator at validator.w3.org","Form to fill in and print as PDF","Your name","Your student ID","Your GitHub Username","The name of your GitHub repository","Please check that the following URLs are correctly working:","Your code (GitHub repository) can be reached at: (please fill in username and repository)","Your web page’s URL is: (please fill in username and repository)","You can check the validity of your code at (please fill in username and repository)","I have checked the three URLs above and they all work!","Click here then choose “Save as PDF” to generate your hand-in document","Please follow the naming conventions: the PDF must be named PRJ4_2122_(student-ID)_individualwebsite.pdf","Please upload to Teams Assignment [LINK TO BE ADDED]"]}],"meta":{"date":"2022-02-21T20:34:39.769Z","browser":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0"}}
,
{"page":"checklist-group.html","sections":[{"title":"Group Assignment Checklist","id":"","lines":["Group Assignment Checklist","Deadlines","First opportunity: Thursday 14 April 2022 before 23:59","Retake opportunity: Friday 10 June 2022 before 23:59","Mode of delivery","Deliver the actual website by using GitHub pages (see details in Part 1 of the guide).","The URL of the website should be on the first page of the justification document.","The justifications should be provided in the common justification document on CumLaude.","Content of the website","The website should be structured to offer access to all the following information (which can be spread in one or multiple pages/screens, depending on students’ design choices):","A highly visual landing page","The brand’s vision and mission","Information about the brand’s products and/or services","Contact information and links to relevant social media","Information about the team","In addition to these mandatory elements, please choose at least one advanced feature for your website:","A product gallery/webshop or","A comparison tool which explains the differences between your offers or","A contest where you call for relevant User-Generated Content (UGC) or","A testimonial page where reviews help your audience choose your product","The website must be designed with your target audience in mind. Apart from the corporate section, is not an investor website but should appeal directly to your personas.","Content of the justification document","As part of the main PRJ4 justification document, you will deliver justifications for your web design choices.","The “website justifications” chapter will contain 2 parts:","A list of design elements alongside their justifications:","A colour scheme (with colour codes)","Font choices","User interface patterns (e.g. grids, carousels, menu organizations etc.)","The structure of the navigation and content (e.g. how content units are distributed across pages)","A scanned paper prototype","A testing report, including:","Testing goals","The testing methods, i.e.","Information about test participants (number, match with target audience, etc.)","Information about the setting (which material is used, is it done remotely, on campus, at home, etc.)","Information about how the test is conducted (what instructions are given, how it is recorded, etc.)","Testing results","Issues and positive points that have been identified, ranked by importance.","Improvements that have been conducted on the final website.","When writing design justifications, students must clearly relate them to:","The theory and/or vocabulary of design","Insight about the audience developed in the other units","The marketing, communication and product development strategies developed in other students","The appendix must contain evidence of testing, such as blank consent forms and/or transcripts","Assessment criteria","Deliverable","Assessment criteria","Weight","Assessment indicators","Pre-requisites","Pass/Fail","The website is accessible publicly through GitHub pages.","Pass/Fail","A scan of a paper prototype is delivered.","Elements assessed directly via","Website","Visual qualities","25%","of production unit","Content is grouped and hierarchized in a way that is well structured, easy to navigate and understand, consistent, intuitive and persuasive.","Uses grids, margins, alignments, contrast and font sizes to achieve a clean, professional and legible look and feel at all screen sizes from mobile to desktop.","Uses visual elements (logos, illustrations, photos, infographics, fonts, colours) and design principles to communicate efficiently and concisely and create a distinctive atmosphere.","Technical qualities","25%","of production unit","Provides access to all required content in a way that is well structured, easy to navigate, consistent and intuitive.","Uses grids, margins and alignments to achieve a clean and professional look and feel.","Uses contrast, font sizes and font families to achieve good legibility at all screen sizes from mobile to desktop.","Elements assessed through","Justification document","Website justifications","25%","of production unit","Lists and justifies all visual choices: the colour scheme (with colour codes), font choices, user interface elements (grids, carousels, menu organizations etc.), the organization of the navigation and content (e.g. how content units are distributed across pages) by using the vocabulary of (UX) design and relating all choices with insight about the target audience.","Clearly relates the design elements and their justifications with the purpose of the website as part of marketing, the vision and mission of the brand, and the elements developed in the lean canvas.","Testing report","25%","of production unit","Describes good quality testing, with a sufficient number of participants, clear testing tasks and testing goals that goals include identifying whether the website fulfils its communication purpose.","Describes issues found through testing with the website, both positive and negative, and sorts them based on level of importance.","Describes how the final website has improved thanks to testing."]}],"meta":{"date":"2022-02-21T20:34:55.297Z","browser":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0"}}
]